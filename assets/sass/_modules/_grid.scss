@mixin grid-item-columns($columns) {
  width: (100% / 12) * $columns;
}

.grid {
	@include padding(null null em(20) null);
}

.grid-items {
  $grid-items-background: $base-background-color;
  $grid-item-background: transparentize(black, .2); 
  $grid-item-colors: 
    transparentize(black, .2),
	transparentize(black, .2);
  $grid-item-border-size: em(4);
  $grid-item-col: 4;
  $grid-item-med-col: 6;
  $grid-item-large-col: 8;
  $grid-item-color: whitesmoke;
  max-width:none;

  @include clearfix;
    
  .grid-item {
    @include transition (all 0.2s ease-in-out);
    height: em(260);
	@include media($medium-up) {height: em(340);}
    background: $grid-item-background;
    width: 100%;
    overflow: hidden;
    float: left;
    padding: 0;
    cursor: pointer;
	position:relative;

    @include media($tablet-screen) {
      @include grid-item-columns($grid-item-med-col);
    }
	@include media($medium-screen) {
      @include grid-item-columns($grid-item-col);
    }

    @for $i from 1 through length($grid-item-colors) { // assign colors from $grid-item-colors list
      &:nth-child(#{$i}) {
        $background-from-list: nth($grid-item-colors, $i);
        background-color: $background-from-list;
        
        &:hover {
          background-color: darken($background-from-list, 10);
          background-repeat: no-repeat;
          background-position: top;
          background-size: cover;
        }
      }
	  &:last-child {
		  background-color: $blue;
	  }
    }
  }

	.grid-item img {
		display: block;
		height: 3em;
		@include margin(auto auto 1em auto);
	}

	.grid-item h1 {
		margin-bottom: 0;
		font-size: 2.2em;
		line-height: 1.5;
		@include margin(.5em auto);
		@include transition(all, .2s ease-in-out);
	}
	.grid-item p.context {
		display: none;
		@include media($tablet-screen) {max-width: 80%;} 
		@include media($tablet-screen) {display: block;} 
	}
	.grid-item h2 {
		font-size: 2.2em;
		@include margin(.5em auto);
	}
	.grid-item h6 {
		@include margin(1em null null null);
		img {
			display: inline-block;
			height: em(35);
			@include margin(-0.2em 0 0 0);
			vertical-align: middle;
			@include padding(0 0 0 0.4em);
		}
	}
	
	.grid-item ul {
	@include position(relative, null);
	@include size(100% auto);
	@include margin(0.5em auto);
	color: white;
	opacity: 1;
	@include transition(all, .2s ease-in-out);
	
		li {
			font-size: .6em;
			display: inline-block;
			font-family: $sans-serif;
			font-weight: 800;
			@include padding(.3em 1em);
			text-transform: uppercase;
			background: transparentize($blue, .2);
			@include margin(auto 0.3em);
			border-radius: 1.2em;
		}
	}

  .grid-item-big {
    @include media($medium-screen) {
      @include grid-item-columns($grid-item-col);
    }
	@include media($large-screen) {
      @include grid-item-columns($grid-item-large-col);
    }
  }

  .grid-item img.bgimage {
	@include position(absolute, 50% null null 50%);
	@include size(auto 110%);
	@include media($tablet-up) {@include size(110% auto);}
	@include media($medium-up) {@include size(auto 110%);}
	@include media($extended-up) {@include size(120% auto);}
    @include transform(translate(-50%, -50%));
	@include transition(all, .4s ease-in-out);
	max-width:none;
	opacity: 0.1;
		
	&.hidden {
		opacity: 0;
		}
  }
  
  
  .grid-item:hover {
	  .hover-tile {
		@include transform(translate(0, -100%));
	  }
	  h1 {
		  opacity: 0;
		 @include transform(translate(0, -200%)); 
	  }
	  img.bgimage.hidden {
		opacity: 1;
	  }
	  ul {
		  opacity: 0;
		  @include transform(translate(0, 200%));
	  }
  }

  .hover-tile {
    @include transition(all, .2s ease-in-out);
	@include transition-delay(0.2s);
    @include position(relative, null);
	color: $grid-item-color;
    height: inherit;
    padding: 2em;	

	&.visible {
		color: white;
	}
	&.hidden {
		background: transparentize($blue, .2);
	}
  }
  
}
